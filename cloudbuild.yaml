# cloudbuild.yaml â€” Build Docker image, push to Artifact Registry, deploy to Cloud Run
# Prereqs:
# 1) Artifact Registry repo (type "Docker") exists:  gcloud artifacts repositories create prepmind --repository-format=docker --location=us-east4
# 2) Enable APIs: run, cloudbuild, artifactregistry
# 3) Have a Dockerfile at repo root

substitutions:
  _REGION: us-east4                 # e.g. us-east4
  _REPO: prepmind                   # Artifact Registry repo name
  _IMAGE: prepmind-web              # image name
  _SERVICE: prepmind-web            # Cloud Run service name
  _PLATFORM: managed
  _CPU: "1"                         # optional
  _MEM: 512Mi                       # optional

options:
  logging: CLOUD_LOGGING_ONLY
  substitutionOption: ALLOW_LOOSE
  machineType: "E2_HIGHCPU_8"

timeout: "1200s"

steps:
  - name: gcr.io/google.com/cloudsdktool/cloud-sdk:slim
    id: "auth docker"
    entrypoint: bash
    args:
      - -c
      - |
        gcloud auth configure-docker ${_REGION}-docker.pkg.dev --quiet

  - name: gcr.io/cloud-builders/docker
    id: "docker build"
    args:
      - build
      - -t
      - "${_REGION}-docker.pkg.dev/$PROJECT_ID/${_REPO}/${_IMAGE}:$SHORT_SHA"
      - -t
      - "${_REGION}-docker.pkg.dev/$PROJECT_ID/${_REPO}/${_IMAGE}:latest"
      - -f
      - Dockerfile
      - "."

  - name: gcr.io/cloud-builders/docker
    id: "push sha"
    args:
      - push
      - "${_REGION}-docker.pkg.dev/$PROJECT_ID/${_REPO}/${_IMAGE}:$SHORT_SHA"

  - name: gcr.io/cloud-builders/docker
    id: "push latest"
    args:
      - push
      - "${_REGION}-docker.pkg.dev/$PROJECT_ID/${_REPO}/${_IMAGE}:latest"

  - name: gcr.io/google.com/cloudsdktool/cloud-sdk:slim
    id: "deploy to cloud run"
    entrypoint: bash
    args:
      - -c
      - >
        gcloud run deploy ${_SERVICE}
        --image=${_REGION}-docker.pkg.dev/$PROJECT_ID/${_REPO}/${_IMAGE}:$SHORT_SHA
        --region=${_REGION}
        --platform=${_PLATFORM}
        --allow-unauthenticated
        --cpu=${_CPU}
        --memory=${_MEM}
        --max-instances=10
        --port=8080

images:
  - "${_REGION}-docker.pkg.dev/$PROJECT_ID/${_REPO}/${_IMAGE}:$SHORT_SHA"
  - "${_REGION}-docker.pkg.dev/$PROJECT_ID/${_REPO}/${_IMAGE}:latest"
